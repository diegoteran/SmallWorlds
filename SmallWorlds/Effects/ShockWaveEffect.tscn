[gd_scene load_steps=4 format=2]

[ext_resource path="res://Effects/ShockWaveEffect.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float torus_thickness : hint_range(0.001, 1.0) = 0.5;
uniform float torus_hardness = 1.0;
uniform float torus_radius = 1.0;
uniform float torus_invert : hint_range(-1.0, 1.0) = 0.0;
uniform vec2 torus_center = vec2(0.5, 0.5);
uniform vec2 torus_size = vec2(1.0, 1.0);

uniform float displacement_amount;

void fragment() {
	// Mask
	float torus_distance = length((UV - torus_center) * torus_size);
	float radius_distance = torus_thickness / 2.0;
	float inner_radius = torus_radius - radius_distance;
	
	float circle_value = clamp(abs(torus_distance - inner_radius) / torus_thickness, 0.0, 1.0);
	float circle_alpha = pow(circle_value, pow(torus_hardness, 2.0));
	
	float mask = abs(clamp(abs(sign(torus_invert)) - sign(torus_invert), 0.0, 1.0) - circle_alpha) * abs(torus_invert);
	
	// Displace
	vec2 displacement_uv = UV + mask * displacement_amount;
	
	vec4 distorted_color = texture(TEXTURE, displacement_uv);
	
	COLOR = distorted_color;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/torus_thickness = 0.5
shader_param/torus_hardness = 1.0
shader_param/torus_radius = 1.0
shader_param/torus_invert = 0.0
shader_param/torus_center = Vector2( 0.5, 0.5 )
shader_param/torus_size = Vector2( 1, 1 )
shader_param/displacement_amount = null

[node name="ShockWaveEffect" type="Node2D"]

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 2 )
margin_right = 40.0
margin_bottom = 40.0
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="ViewportContainer"]
